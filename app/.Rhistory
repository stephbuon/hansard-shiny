name = "1820",
domain = list(x = c(1, 0.4), y = c(1.4, 1)))
fig
fig <- plot_ly()
fig <- fig %>%
add_pie(data = viz_1,
labels = ~speech_length_type,
values = ~prop,
name = "1810",
domain = list(x = c(0, 0.4), y = c(0.4, 1)))
fig
fig <- fig %>%
add_pie(viz_2,
labels = ~speech_length_type,
values = ~prop,
name = "1820",
domain = list(x = c(0.6, 1), y = c(0.4, 1)))
View(viz_2)
View(viz_1)
viz <-  viz %>%
group_by(decade, speech_length_type) %>%
summarise(n = sum(n)) %>%
mutate(prop = n / sum(n)) %>%
ungroup()
fig <- plot_ly()
fig <- fig %>%
add_pie(data = viz_1,
labels = ~speech_length_type,
values = ~prop,
name = "1810",
domain = list(x = c(0, 0.4), y = c(0.4, 1)))
fig <- plot_ly()
fig <- fig %>%
add_pie(data = viz_2,
labels = ~speech_length_type,
values = ~prop,
name = "1820",
domain = list(x = c(0.6, 1), y = c(0.4, 1)))
fig
fig <- fig %>%
add_pie(data = viz_1,
labels = ~speech_length_type,
values = ~prop,
name = "1810",
domain = list(x = c(0, 0.4), y = c(0.4, 1)))
fig
c <- fread("/home/stephbuon/projects/hansard-shiny/app-data/debate-text/tokenized_hansard_count/tokenized_hansard_count_all_decades_speech_length_type_2.csv") %>%
filter(ngrams == word)
c <- fread("/home/stephbuon/projects/hansard-shiny/app-data/debate-text/tokenized_hansard_count/tokenized_hansard_count_all_decades_speech_length_type_2.csv") %>%
filter(ngrams == "crown")
View(c)
all <- bind_rows(a, b, c)
word <- "crown" #input$test
a <- fread("/home/stephbuon/projects/hansard-shiny/app-data/debate-text/tokenized_hansard_count/tokenized_hansard_count_all_decades_speech_length_type_0.csv") %>%
filter(ngrams == word)
b <- fread("/home/stephbuon/projects/hansard-shiny/app-data/debate-text/tokenized_hansard_count/tokenized_hansard_count_all_decades_speech_length_type_1.csv") %>%
filter(ngrams == word)
c <- fread("/home/stephbuon/projects/hansard-shiny/app-data/debate-text/tokenized_hansard_count/tokenized_hansard_count_all_decades_speech_length_type_2.csv") %>%
filter(ngrams == word)
all <- bind_rows(a, b, c)
f <-  all %>%
group_by(decade, speech_length_type) %>%
summarise(n = sum(n)) %>%
mutate(prop = n / sum(n)) %>%
ungroup()
f <-  all %>%
group_by(decade, speech_length_type) %>%
summarise(n = sum(token_count)) %>%
mutate(prop = n / sum(n)) %>%
ungroup()
View(f)
runApp('hansard-shiny')
c <- fread("/home/stephbuon/projects/hansard-shiny/app-data/debate-text/tokenized_hansard_count/tokenized_hansard_count_all_decades_speech_length_type_2.csv")
f <-  all %>%
group_by(decade, speech_length_type) %>%
summarise(n = sum(token_count)) %>%
mutate(prop = n / sum(n)) %>%
ungroup()
fig <- plot_ly(f,
x = ~decade,
y =  ~prop, #~token_count,
type = 'scatter',
mode = 'lines') %>%
add_trace(data=b, name="line1", x = ~decade, y = ~token_count) %>%
add_trace(data=c, name="line2", x = ~decade, y = ~token_count) %>%
config(displayModeBar = F)
fig
View(fig)
View(f)
runApp('hansard-shiny')
runApp('hansard-shiny')
runApp('hansard-shiny')
runApp('hansard-shiny')
runApp('hansard-shiny')
load("/home/stephbuon/projects/hansardr/hansardr/data/file_metadata_1880.RData")
load("~/projects/hansardr/data/debate_metadata_1800.RData")
load("~/projects/hansardr/data/debate_metadata_1840.RData")
1035152
1130420
1011519
1417769
1917907
1817907
install_github("stephbuon/hansardr")
library(devtools)
install_github("stephbuon/hansardr")
install_github("stephbuon/hansardr")
install_github("stephbuon/hansardr")
install_github("stephbuon/hansardr")
install_github("stephbuon/hansardr")
library(hansardr)
help(hansardr)
??hansardr
xlim<-max(c(abs(min(data$x)),abs(max(data$x))))
ylim<-max(c(abs(min(data$y)),abs(max(data$y))))
col <- as.character(data$Color)
names(col) <- as.character(data$Group)
ggplot(data, aes(x = x, y = y, label = Group)) +
geom_point(aes(size = size, colour = Group), show.legend = TRUE) +
scale_color_manual(values=col) +
geom_text(size = 4) +
scale_size(range = c(5,15)) +
scale_x_continuous(name="x", limits=c(xlim*-1-1,xlim+1))+
scale_y_continuous(name="y", limits=c(ylim*-1-1,ylim+1))+
theme_bw()
library(tidyverse)
xlim<-max(c(abs(min(data$x)),abs(max(data$x))))
ylim<-max(c(abs(min(data$y)),abs(max(data$y))))
col <- as.character(data$Color)
names(col) <- as.character(data$Group)
ggplot(data, aes(x = x, y = y, label = Group)) +
geom_point(aes(size = size, colour = Group), show.legend = TRUE) +
scale_color_manual(values=col) +
geom_text(size = 4) +
scale_size(range = c(5,15)) +
scale_x_continuous(name="x", limits=c(xlim*-1-1,xlim+1))+
scale_y_continuous(name="y", limits=c(ylim*-1-1,ylim+1))+
theme_bw()
data <- read.table("Group    x   y  size    Color
Medium   1   2  2000    yellow
Small   -1   2  1000    red
Large    2  -1  4000    green
Other   -1  -1  2500    blue",head=TRUE)
xlim<-max(c(abs(min(data$x)),abs(max(data$x))))
ylim<-max(c(abs(min(data$y)),abs(max(data$y))))
library(tidyverse)
df <- read_csv("/home/stephbuon/projects/entascope/results/12-27-2021/plot_data/FOX_EVENT_plot_data.csv")
View(df)
df <- read_csv("/home/stephbuon/projects/entascope/results/12-27-2021/plot_data/FOX_EVENT_plot_data.csv")
View(df)
library(tidyverse)
df <- read_csv("/home/stephbuon/projects/entascope/results/12-27-2021/plot_data/FOX_EVENT_plot_data.csv")
p <- ggplot(data=df, aes(x=dose, y=len)) +
geom_bar(stat="identity") +
coord_flip()
p
ggplot(data = df,
aes(x = proportion,
y = entity_text)) +
geom_bar(stat="identity") +
coord_flip()
ggplot(data = df,
aes(x = proportion,
y = entity_text)) +
geom_bar(stat="identity") +
coord_flip()
ggplot(data = df,
aes(x = proportion,
y = entity_text)) +
geom_bar() +
coord_flip()
df <- df %>%
arrange(desc(proportion))
ggplot(data = df,
aes(x = proportion,
y = entity_text)) +
geom_bar(stat="identity") +
coord_flip()
df <- read_csv("/home/stephbuon/projects/entascope/results/12-27-2021/plot_data/FOX_EVENT_plot_data.csv")
df <- df %>%
arrange(desc(proportion))
ggplot(data = df,
aes(x = proportion,
y = entity_text)) +
geom_bar(stat="identity") +
coord_flip()
ggplot(data = df,
aes(x = reorder(proportion, entity_text),
y = entity_text)) +
geom_bar(stat="identity") +
coord_flip()
ggplot(data = df,
aes(x = reorder(-proportion, entity_text),
y = entity_text)) +
geom_bar(stat="identity") +
coord_flip()
library(tidyverse)
df <- read_csv("/home/stephbuon/projects/entascope/results/12-27-2021/plot_data/FOX_EVENT_plot_data.csv")
df <- df %>%
arrange(desc(proportion))
ggplot(data = df,
aes(x = reorder(-proportion, entity_text),
y = entity_text)) +
geom_bar(stat="identity")
ggplot(data = df,
aes(x = reorder(-proportion),
y = entity_text)) +
geom_bar(stat="identity")
library(tidyverse)
df <- read_csv("/home/stephbuon/projects/entascope/results/12-27-2021/plot_data/FOX_EVENT_plot_data.csv")
df <- df %>%
arrange(desc(proportion))
ggplot(data = df,
aes(x = reorder(entity_text, -proportion),
y = entity_text)) +
geom_bar(stat="identity")
col <- as.character(data$Color)
names(col) <- as.character(data$Group)
scale_color_manual(values=col) +
df <- df %>%
arrange(desc(proportion))
df <- read_csv("/home/stephbuon/projects/entascope/results/12-27-2021/plot_data/FOX_EVENT_plot_data.csv")
df <- df %>%
arrange(desc(proportion))
plot_ly(data = data,
x = ~proportion,
y = ~reorder(entity_text, proportion),
type = 'bar',
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = "")) %>%
config(displayModeBar = F) })
plot_ly(data = data,
plot_ly(data = data,
x = ~proportion,
y = ~reorder(entity_text, proportion),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = "")) %>%
config(displayModeBar = F)
plot_ly(data = data,
x = ~proportion,
y = ~reorder(entity_text, proportion),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = "")) %>%
config(displayModeBar = F)
library(plotly)
df <- read_csv("/home/stephbuon/projects/entascope/results/12-27-2021/plot_data/FOX_EVENT_plot_data.csv")
df <- df %>%
arrange(desc(proportion))
plot_ly(data = data,
x = ~proportion,
y = ~reorder(entity_text, proportion),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = "")) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = "")) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color)
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = "")) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = "")) %>%
config(displayModeBar = F)
df <- read_csv("/home/stephbuon/projects/entascope/results/12-27-2021/plot_data/FOX_EVENT_plot_data.csv")
df <- df %>%
arrange(desc(proportion))
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 80)) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 160)) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 250)) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 350)) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 450)) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 550)) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 500)) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 480)) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 485)) %>%
config(displayModeBar = F)
df <- read_csv("/home/stephbuon/projects/entascope/results/12-27-2021/plot_data/FOX_EVENT_plot_data.csv")
df <- df %>%
arrange(desc(proportion))
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 485)) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 485)) %>%
config(displayModeBar = F)
df <- read_csv("/home/stephbuon/projects/entascope/results/12-27-2021/plot_data/FOX_EVENT_plot_data.csv")
df <- df %>%
arrange(desc(proportion))
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 485)) %>%
config(displayModeBar = F)
df <- read_csv("/home/stephbuon/projects/entascope/results/12-27-2021/plot_data/FOX_EVENT_plot_data.csv")
df <- df %>%
arrange(desc(proportion))
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 485)) %>%
config(displayModeBar = F)
col <- as.character(data$Color)
df <- df %>%
arrange(desc(proportion))
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 485)) %>%
layout(showlegend = TRUE,
legend = list(orientation = "h",
xanchor = "center",
x = 0.5, y = 7)) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 485)) %>%
layout(showlegend=T)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 485)) %>%
layout(showlegend=T)
legend("bottomleft",
legend = c("Group 1", "Group 2"),
col = c(rgb(0.2,0.4,0.1,0.7),
rgb(0.8,0.4,0.1,0.7)),
pch = c(17,19),
bty = "n",
pt.cex = 2,
cex = 1.2,
text.col = "black",
horiz = F ,
inset = c(0.1, 0.1))
df <- df %>%
arrange(desc(proportion))
l <- list(
font = list(
family = "sans-serif",
size = 12,
color = "#000"),
bgcolor = "#E2E2E2",
bordercolor = "#FFFFFF",
borderwidth = 2)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 485),
legend = l) %>%
config(displayModeBar = F)
plot_ly(data = df,
x = ~proportion,
y = ~reorder(entity_text, proportion),
marker = list(color = ~color),
type = 'bar') %>%
layout(xaxis = list(title ="Frequency"),
yaxis = list(title = ""),
margin = list(l = 485),
showlegend = T,
legend = l) %>%
config(displayModeBar = F)
library(tidyverse)
files <- list.files('/home/stephbuon/projects/entascope/results/12-27-2021/plot_data')
library(tidyverse)
pwd <- '/home/stephbuon/projects/entascope/results/12-27-2021/plot_data'
files <- list.files(pwd)
all_data <- data.frame()
for (f in files) {
g <- read_csv(paste0(pwd, '/', f))
all_data <- bind_rows(all_data, g)
}
View(all_data)
write_csv(paste0(pwd, '/', 'all_data.csv'))
write_csv(all_data, paste0(pwd, '/', 'all_data.csv'))
shiny::runApp('hansard-shiny/app')
runApp('hansard-shiny/app')
hansard_1800 <- fread(paste0(data_dir, "kwic/hansard_1800.csv"))
cached_hansard_1800 <- memo_cache_corpus_obj_1800(hansard_1800)
runApp('hansard-shiny/app')
runApp('hansard-shiny/app')
runApp('hansard-shiny/app')
runApp('hansard-shiny/app')
runApp('hansard-shiny/app')
runApp('hansard-shiny/app')
runApp('hansard-shiny/app')
runApp('hansard-shiny/app')
runApp('hansard-shiny/app')
shiny::runApp()
